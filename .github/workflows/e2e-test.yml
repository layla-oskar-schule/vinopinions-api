name: End-to-End test

on:
  push:
    branches: ['developer', 'master']
  pull_request:
    branches: ['developer', 'master']
  schedule:
    - cron: '0 8 * * *'

env:
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: postgres
  POSTGRES_PORT: 5432
  POSTGRES_DB: test

jobs:
  test:
    name: e2e Test
    runs-on: ubuntu-latest
    environment: test
    container: node:${{ vars.NODE_VERSION }}
    permissions:
      contents: read
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: yarn --ignore-scripts --non-interactive --frozen-lockfile

      - name: Run Tests
        run: yarn test:e2e --ci --runInBand
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
          NODE_ENV: test
          AUTH_SERVICE_DOMAIN: ${{ vars.AUTH_SERVICE_DOMAIN }}
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
          JWT_PUBLIC_KEY: ${{ vars.JWT_PUBLIC_KEY }}
