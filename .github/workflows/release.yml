name: Release
on:
  push:
    branches: ['master', 'developer']

permissions:
  contents: read # for checkout

jobs:
  codeql:
    uses: ./.github/workflows/codeql.yml
    permissions:
      actions: read
      security-events: write
      contents: read

  eslint:
    uses: ./.github/workflows/eslint.yml
    permissions:
      security-events: write
      contents: read

  test-unit:
    uses: ./.github/workflows/unit-test.yml

  test-e2e:
    uses: ./.github/workflows/e2e-test.yml

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      packages: write

    environment:
      name: ${{ contains(github.ref_name, 'developer') && 'dev' || 'production' }}

    needs:
      - codeql
      - eslint
      - test-unit
      - test-e2e

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ vars.RELEASE_BOT_ID }}
          private_key: ${{ secrets.RELEASE_BOT_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Install dependencies
        run: yarn --ignore-scripts --non-interactive --frozen-lockfile

      - name: Create github release and publish docker image
        env:
          BRANCH_NAME: ${{ github.ref_name }}
          DOCKER_REGISTRY_USER: ${{ github.actor }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_REGISTRY: ghcr.io
          DOCKER_IMAGE_TAG: ${{ vars.DOCKER_IMAGE_TAG }}
          DOCKER_IMAGE_NAME: ${{ github.event.repository.name }}
          DOCKER_PROJECT: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: yarn release
